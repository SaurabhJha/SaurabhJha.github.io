<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paper-Review on Saurabh Jha</title>
    <link>http://localhost:1313/categories/paper-review/</link>
    <description>Recent content in Paper-Review on Saurabh Jha</description>
    <generator>Hugo</generator>
    <language>en-gb</language>
    <atom:link href="http://localhost:1313/categories/paper-review/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Review&amp;#58; End-to-end Arguments in System Design</title>
      <link>http://localhost:1313/posts/2017-11-07-paper-review-end-to-end-arguments-in-system-design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2017-11-07-paper-review-end-to-end-arguments-in-system-design/</guid>
      <description>&lt;h1 id=&#34;pagetitle&#34;&gt;{{page.title}}&lt;/h1&gt;&#xA;&lt;p&gt;These are my thoughts on the classic paper &amp;ldquo;End-to-end Arguments in System&#xA;Design&amp;rdquo; written by Jerome Saltzer, David Reed, and David Clarke. It&amp;rsquo;s a very old&#xA;paper; the version I read was published in 1984. The paper argues against&#xA;implementing functionality at lower levels of the system. It appeals to&#xA;application requirements and argues for moving a function upwards in a layered&#xA;system.&lt;/p&gt;&#xA;&lt;p&gt;I believe these ideas started gaining more ground after the advent of networked&#xA;computers. The concept is motivated using examples from data communication&#xA;networks and transactional systems.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
